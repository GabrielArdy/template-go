

openapi: "3.0.0"
info:
  version: 1.0.0
  title: template
  license:
    name: MIT
servers:
  - url: http://localhost:8080
    description: Local server
  - url: https://api.example.com/v1
    description: Production server
paths:
  /api/actuator/health:
    get:
      summary: Health check
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status of the service
                    example: UP
  /api/auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignup'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/auth/login:
    post:
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoginResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/auth/validate/{id}:
    get:
      summary: Validate a user
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/attendance/checkin:
    post:
      summary: Record check-in time
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckinRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttendanceResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/attendance/checkout:
    post:
      summary: Record check-out time
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    UserSignup:
      type: object
      properties:
        email:
          type: string
          format: email
          description: Email address
        password:
          type: string
          description: Password
          minLength: 6
        firstName:
          type: string
          description: First name
        lastName:
          type: string
          description: Last name
        teacherId:
          type: string
          description: Teacher ID
        grade:
          type: string
          description: Grade
        position:
          type: string
          description: Position
        status:
          type: string
          description: Status
        role:
          type: string
          description: Role
      required:
        - email
        - password
        - firstName
        - lastName
        - teacherId
        - grade
        - position
        - status
        - role
    UserLoginRequest:
      type: object
      properties:
        user:
          type: string
          description: Teacher ID
        password:
          type: string
          description: Password
      required:
        - user
        - password
    UserLoginResponse:
      type: object
      properties:
        token:
          type: string
          description: JWT token
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        teacherId:
          type: string
          description: Teacher ID    
      required:
        - token
        - teacherId
    UserValidate:
      type: object
      properties:
        id:
          type: string
          description: User ID
        status:
          type: boolean
          description: Status
          example: true
      required:
        - id
        - status
    CheckinRequest:
      type: object
      properties:
        teacherId:
          type: string
          description: Teacher ID
        checkin:
          type: string
          format: date-time
          description: Check-in time
        QRToken:
          type: string
          description: QR Token
      required:
        - teacherId
        - checkin
        - QRToken
    AttendanceResponse:
      type: object
      properties:
        teacherId:
          type: string
          description: Teacher ID
        checkin:
          type: string
          format: date-time
          description: Check-in time
        checkout:
          type: string
          format: date-time
          description: Check-out time
        Message:
          type: string
          description: QR Token
      required:
        - teacherId
        - checkin
        - Message
    CheckoutRequest:
      type: object
      properties:
        teacherId:
          type: string
          description: Teacher ID
        checkout:
          type: string
          format: date-time
          description: Check-out time
        QRToken:
          type: string
          description: QR Token
      required:
        - teacherId
        - checkout
        - QRToken
    CheckoutResponse:
      type: object
      properties:
        teacherId:
          type: string
          description: Teacher ID
        checkin:
          type: string
          format: date-time
          description: Check-in time
        checkout:
          type: string
          format: date-time
          description: Check-out time
        Message:
          type: string
          description: QR Token
      required:
        - teacherId
        - checkout
        - Message
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: Error code
        message:
          type: string
          description: Error message
        fields:
          type: string
          description: Fields with errors
      required:
        - code
        - message
        - fields
    Success:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: Success code
        message:
          type: string
          description: Success message
      required:
        - code
        - message
        
